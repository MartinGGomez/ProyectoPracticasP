<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mnZsAAAAAElFTkSuQmCC
</value>
  </data>
</root>