<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_minimizar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAkAAAAIACAYAAABqwtNaAAAABGdBTUEAALGPC/xhBQAACOxJREFUeF7t
        3UGLVXUYx3F1J0UitZOYhRHudO9eegGRi1qHhOsoSvAFRLSofdCiWbjNZUK7imCColkKboaETMycTdnv
        f84DISo5NuPMPc/nA887+MLvcrnn3EMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAMBquX///tnc27mPc1/lNnI3cvdyAPQ0NmBswdiEsQ1jI8ZWnK35gNWSeE/lLuW+yQHATo0P
        R1/nxpacqnmBgyeBnqxQf8oBwG4a2zI25mTNDuyvxPhK7rPc3RwA7KWxNZ/mXqkZgmcr8R3OXcz9kQOA
        Z2lszzu5wzVLsPcS3FruWg4A9tPYorWaJ9g7Ce187s6oDgAOgN9yb9ZMwe5KXMdyX47SAOAA+iL3XM0W
        /H8J6oXc1VEXABxgY6uO1nzB00tIJ3IebQdgVXyfe6lmDJ5OIroy5QQAq2O9Zgx2LgFdnjsCgJXzXs0Z
        PLmEcy7315QQAKyesWGv1azBf0swp3O3Rz0AsMJ+z71a8waPl1CO5H4Z1QDAAvycO1IzB4+WSC5MuQDA
        clyomYOHJZAXczenVABgOX7NPV9zBw9KHJ76AmCpLtfcwb8Sxviri1tTIgCwPGPjjtXswSxR+PYHgKXz
        LRAPShSbcxsAsFibNXswffg5M3cBAIt3puaP7hLDJ3MTALB4n9T80V1i2JibAIDF26j5o7OE8HLu7ykJ
        AFi+8R9hx2sG6SoRvDXlAAB9vF4zSFeJwOPvAHTjcfjuEsH63AIAtLFeM0hXieDHuQUAaOP7mkG6SgTX
        5xYAoI3rNYN0lQi25hYAoI2tmkG6SgTbcwsA0MZ2zSBdVQgA0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA
        0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA0ErNIF1VBwDQSs0g
        XVUHANBKzSBdVQcA0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA
        0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA0ErNIF1VBwDQSs0g
        XVUHANBKzSBdVQcA0ErNIF1VBwDQSs0gXVUHANBKzSBdVQcA0ErNIF1VBwDQSs0gXaWB7TkFAGhju2aQ
        rhLB1twCALSxVTNIV4ng+twCALSxWTNIV4ngh7kFAGjj25pBukoE63MLANDGes0gXSWCy3MLANDG5ZpB
        ukoEb80tAEAbr9cM0lUiWMv9NeUAAMv3d+5YzSCdJYSNKQkAWL6Nmj+6SwwfzU0AwOJ9VPNHd4nhzNwE
        ACzemZo/mD4Ebc5dAMBieQEiD0oUH85tAMBifVizB7NEcSx3a8oDAJZnbJynv3hYwvBSRACWyssPebTE
        Mb4F+nXKBACW42bOtz88XgK5MKUCAMtxoWYOHi2RHMn9POUCAKvvu9yRmjl4vIQy3gv056gGAFbY7dzp
        mjf4bwnmjSkdAFhN438uz9WswZNLOB9MCQHA6nm/5gx2LgGtzx0BwMq4UjMGTycRHc2NH5ABwCr4Nne0
        ZgyeXkJ6IXd1VAUAB9jYKh9+2F2J6vMpLwA4eD6vuYLdl8DezN2ZUgOA/Tf+4+t8zRTsnYR2MndtVAcA
        +2hs0YmaJ9h7Ce5w7p3cHzkAeJbG9lzMHa5Zgmcr8a3lPs3dzQHAXhpb81lurWYI9ldiPJ57N7eZA4Dd
        NLZlbMzxmh04eBLoqdyl3Dc5ANipe7mvc2NLTtW8wGpJvGdzb+c+zn2V28jdyI3AAehpbMDYgrEJYxvG
        RoytOFvzAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArIRDh/4BtTL1
        48aANX8AAAAASUVORK5CYII=
</value>
  </data>
</root>